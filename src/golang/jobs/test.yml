description: Go test job
executor:
  name: golang
  tag: << parameters.version >>
parameters:
  version:
    description: version of golang to use (Defaults to 1.13; must be a valid docker circleci/golang tag)
    type: string
    default: "1.13"
  timeout:
    description: go test -timeout value (defaults to 30s)
    type: string
    default: 30s
  pkg-spec:
    description: Spec of packages to test (defaults to ./...)
    type: string
    default: ./...
  race:
    description: go test -race (defaults to true)
    type: boolean
    default: true
  cache:
    description: Use circle ci cache (defaults to true)
    type: boolean
    default: true
  cover:
    description: Generate cover profile (defaults to true)
    type: boolean
    default: true
  cover-mode:
    description: go test -covermode (Defaults to atomic)
    type: string
    default: atomic
steps:
  - checkout
  - when:
      condition: << parameters.cache >>
      steps:
        - restore_cache:
            keys:
              - v1-mod-cache-{{ checksum "go.sum" }}
  - when:
      condition: << parameters.race >>
      steps:
        - run: go test -race -v -timeout << parameters.timeout >> << parameters.pkg-spec >>
  - unless:
      condition: << parameters.race >>
      steps:
        - run: go test -v -timeout << parameters.timeout >> << parameters.pkg-spec >>
  - when:
      condition: << parameters.cache >>
      steps:
        - save_cache:
            key: v1-mod-cache-{{ checksum "go.sum" }}
            paths:
              - "/go/pkg/mod"
              - "/go/pkg/sumdb"
  - when:
      condition: << parameters.cover >>
      steps:
        - run:
            command: |
              go test -v -timeout << parameters.timeout >> -coverprofile=coverage.txt -covermode=<< parameters.cover-mode >> << parameters.pkg-spec >>
              go tool cover -html=coverage.txt -o coverage.html
        - run:
            command: |
              mkdir -p /tmp/coverage
              cp coverage.html /tmp/coverage
        - store_artifacts:
            path: /tmp/coverage
