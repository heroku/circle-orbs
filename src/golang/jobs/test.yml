description: |
  Go test job with databases (postgresql & redis) as secondary executors, go-migrate, & go cover.
  If you don't need postgresql / redis use the 'test-no-dbs' job.

executor:
  name: golang-with-dbs
  tag: << parameters.version >>
  postgres-tag: << parameters.postgres-version >>
  redis-tag: << parameters.redis-version >>

parameters:
  cache:
    description: Use circle ci cache (Defaults to 'true')
    type: boolean
    default: true
  check-modules:
    description: Check that the modules are tidy/up-to-date (Defaults to 'true')
    type: boolean
    default: true
  check-vendor:
    description: Check that `vendor/` directory is up to date (Defaults to 'false')
    type: boolean
    default: false
  checkout:
    description: Checkout the code (Defaults to 'true')
    type: boolean
    default: true
  cover:
    description: Controls the creation and saving of coverage output (Defaults to 'true')
    type: boolean
    default: true
  covermode:
    description: cover mode (Defaults to 'atomic')
    type: string
    default: atomic
  race-detector:
    description: Controls race detector (Defaults to 'true')
    type: boolean
    default: true
  install-postgresql-client:
    description: controls installation of the postgresql-client package (Defaults to 'true')
    type: boolean
    default: true
  install-redis-tools:
    description: controls installation of the install-redis-tools package (Defaults to 'true')
    type: boolean
    default: true
  migrate:
    description: use golang-migrate/migrate tool to migrate database (Defaults to 'true')
    type: boolean
    default: true
  migration-path:
    description: location of golang-migrate migration files (Defaults to 'internal/db/migrations')
    type: string
    default: internal/db/migrations
  migration-version:
    description: version of golang-migrate/migrate to use (Defaults to '4.6.2')
    type: string
    default: "4.6.2"
  pkg-spec:
    description: Spec of packages to test (Defaults to './...')
    type: string
    default: ./...
  postgres-version:
    description: version of postgres to use (Defaults to 'latest'; must be a valid docker postgres tag)
    type: string
    default: latest
  redis-version:
    description: version of redis to use (Defaults to 'latest'; must be a valid docker redis tag)
    type: string
    default: latest
  test-opts:
    description: go test options (Defaults to '-v -timeout 30s')
    type: string
    default: -v -timeout 30s
  version:
    description: version of golang to use (Defaults to 'latest'; must be a valid docker circleci/golang tag)
    type: string
    default: latest

steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout
  - when:
      condition: << parameters.cache >>
      steps:
        - restore_cache:
            keys:
              - v1-mod-cache-{{ checksum "go.sum" }}
              - v1-mod-cache-
  - when:
      condition: << parameters.check-modules >>
      steps:
        - go:
            pkg-spec: ""
            opts: mod verify
        - go:
            pkg-spec: ""
            opts: mod tidy
        - run:
            name: Check Modules
            command: |
              if [ ! -z "$(git status --porcelain)" ]; then
                git status
                echo
                echo -e '\033[1;93m!!! "go mod verify && go mod tidy" resulted in changes. Please run those commands locally and commit the changes.\e[0m'
                echo
                exit 1
              fi
  - when:
      condition: << parameters.check-vendor >>
      steps:
        - run:
            name: Check Vendor
            command: |
              if [ -d ./vendor ]; then
                go mod vendor
              else
                echo
                echo -e '\033[1;93m./vendor does not exist, but "check-vendor" is enabled. Disable check-vendor or populate a vendor folder\e[0m'
                echo
                exit 1
              fi
              if [ ! -z "$(git status --porcelain)" ]; then
                git status
                echo
                echo -e '\033[1;93m!!! "go mod vendor" resulted in changes. Please run that command locally and commit the changes.\e[0m'
                echo
                exit 1
              fi
  - when:
      condition: << parameters.install-postgresql-client >>
      steps:
        - install-postgresql-client
  - when:
      condition: << parameters.install-redis-tools >>
      steps:
        - install-redis-tools
  - when:
      condition: << parameters.migrate >>
      steps:
        - golang-migrate:
            command: up
            migration-path: << parameters.migration-path >>
            version: << parameters.migration-version >>
  - go:
      pkg-spec: << parameters.pkg-spec >>
      opts: test << parameters.test-opts >> <<# parameters.race-detector >> -race <</ parameters.race-detector >> <<# parameters.cover >> -coverprofile=coverage.out -covermode=<< parameters.covermode >><</ parameters.cover >>
  - when:
      condition: << parameters.cover >>
      steps:
        - cover
  - when:
      condition: << parameters.cache >>
      steps:
        - save_cache:
            key: v1-mod-cache-{{ checksum "go.sum" }}
            paths:
              - "/go/pkg/mod"
              - "/go/pkg/sumdb"
